name: Auto Build Image

env:
  ONLINE_REGISTER: ghcr.io
  BUILD_PLATFORM: linux/amd64,linux/arm64
  ONLINE_REGISTER_USER: ${{ github.actor }}
  ONLINE_REGISTER_PASSWORD: ${{ secrets.GITHUB_TOKEN }}

on:
  workflow_call:
    inputs:
      ref:
        required: true
        type: string
      tag:
        required: true
        type: string
      push:
        required: false
        type: boolean

permissions: write-all

jobs:
  build_and_push_prs:
    runs-on: ubuntu-latest
    steps:
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.0.0

      - name: Login to online register
        uses: docker/login-action@v3.0.0
        if: ${{ inputs.push == true }}
        with:
          username: ${{ env.ONLINE_REGISTER_USER }}
          password: ${{ env.ONLINE_REGISTER_PASSWORD }}
          registry: ${{ env.ONLINE_REGISTER }}

      # checkout the changed code
      - name: Checkout Source Code
        uses: actions/checkout@v4
        with:
          persist-credentials: false
          ref: ${{ inputs.ref }}

      - name: Getting Build Arg
        id: arg
        continue-on-error: false
        run: |
          GIT_COMMIT_VERSION=$( git show -s --format='format:%H')
          GIT_COMMIT_TIME=$( git show -s --format='format:%aI')
          echo ::set-output name=commit_version::${GIT_COMMIT_VERSION}
          echo ::set-output name=commit_time::${GIT_COMMIT_TIME}

      # ========== image build
      # build normal image
      - name: Image Build
        uses: docker/build-push-action@v5.0.0
        continue-on-error: false
        id: docker_build_master
        with:
          context: .
          file: ./Dockerfile
          # Only push when the event name was a GitHub push, this is to avoid
          # re-pushing the image tags when we only want to re-create the Golang
          # docker cache after the workflow "Image CI Cache Cleaner" was terminated.
          push: ${{ inputs.push }}
          provenance: false
          platforms: linux/amd64,linux/arm64
          github-token: ${{ secrets.GITHUB_TOKEN }}
          tags: |
            ${{ env.ONLINE_REGISTER }}/${{ github.repository }}/cilium-chaining:${{ inputs.tag }}
          build-args: |
            GIT_COMMIT_VERSION=${{ steps.arg.outputs.commit_version }}
            GIT_COMMIT_TIME=${{ steps.arg.outputs.commit_time }}
